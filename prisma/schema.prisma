// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["jsonProtocol", "fullTextSearch", "fullTextIndex"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  // relationMode = "prisma"
}

model Test {
  id   Int     @id @default(autoincrement())
  data String
}

model Account {
  id                String   @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?  @db.VarChar()
  access_token      String?  @db.VarChar()
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?  @db.VarChar()
  session_state     String?
  createdAt         DateTime @default(now()) @map(name: "created_at")
  updatedAt         DateTime @default(now()) @map(name: "updated_at")

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@index([userId])
  @@map(name: "accounts")
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
  @@map(name: "sessions")
}

model Organization {
  id             String             @id @default(uuid())
  name           String
  description    String
  email          String?            @unique
  emailVerified  DateTime?
  image          String?
  createdAt      DateTime           @default(now()) @map(name: "created_at")
  updatedAt      DateTime           @default(now()) @map(name: "updated_at")
  locations      Location[]
  // waivers        Waiver[]
  purchases      Purchase[]
  waiverTemplate WaiverTemplate[]
  users          UserOrganization[]

  stripePlanId           String?            @map(name: "stripe_plan_id")
  stripeCurrentPeriodEnd DateTime?          @map(name: "stripe_current_period_end")
  stripeSubscriptionId   String?            @unique @map(name: "stripe_subscription_id")
  stripePriceId          String?            @map(name: "stripe_price_id")
  stripeProductId        String?            @map(name: "stripe_product_id")
}

model Template {
  id        String           @id @default(cuid())
  title     String
  content   String
  createdAt DateTime         @default(now())
  updatedAt DateTime         @updatedAt
  templates WaiverTemplate[]
}

model Location {
  id             String       @id @default(uuid())
  name           String
  address        String
  createdAt      DateTime     @default(now()) @map(name: "created_at")
  updatedAt      DateTime     @default(now()) @map(name: "updated_at")
  organizationId String
  organization   Organization @relation(fields: [organizationId], references: [id])
}

// Each org can have many users, and each user can belong to any org.
// This is used to enable a many-to-many relationship.
model UserOrganization {
  id             String       @id @default(cuid())
  userId         String
  user           User         @relation(fields: [userId], references: [id])
  organizationId String
  organization   Organization @relation(fields: [organizationId], references: [id])
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt

  @@unique([userId, organizationId])
}

model User {
  id            String     @id @default(cuid())
  name          String?
  email         String?    @unique
  emailVerified DateTime?
  image         String?
  createdAt     DateTime   @default(now()) @map(name: "created_at")
  updatedAt     DateTime   @default(now()) @map(name: "updated_at")
  purchases     Purchase[]
  accounts      Account[]
  sessions      Session[]
  // waivers       Waiver[]
  role          Role       @default(GUEST)

  UserOrganization       UserOrganization[]

  @@map(name: "users")
}

model Waiver {
  id             Int            @id @default(autoincrement())
//  userId         String
//  templateId     String
//  organizationId String
  signature      String
  waiverText     String
//  waiverPdf      String
//  user           User           @relation(fields: [userId], references: [id])
//  template       WaiverTemplate @relation(fields: [templateId], references: [id])
//  organization   Organization   @relation(fields: [organizationId], references: [id])
  createdAt      DateTime       @default(now())
//  pdatedAt       DateTime       @updatedAt
}

model WaiverTemplate {
  id             String       @id @default(cuid())
  title          String
  content        String
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt
  organizationId String
  organization   Organization @relation(fields: [organizationId], references: [id])
  // waivers        Waiver[]
  Template       Template?    @relation(fields: [templateId], references: [id])
  templateId     String?
}

model Purchase {
  id             String       @id @default(cuid())
  userId         String
  organizationId String
  user           User         @relation(fields: [userId], references: [id])
  organization   Organization @relation(fields: [organizationId], references: [id])
  creditAmount   Int
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt

  @@index([userId])
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
  @@map(name: "verification_tokens")
}

enum Role {
  ADMIN //Can manage orgs
  ORGS // Organization collecting the waivers
  USER // User who signs the waiver to the org.
  GUEST // Not logged in, viewing the marketing page.
}
